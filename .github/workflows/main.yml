name: Server Workflows

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ROOT_PASS: ${{ secrets.ROOT_PASS }}
      ZROK_ENV: ${{ secrets.ZROK_ENV }}

    steps:
    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg xrdp curl p7zip-full expect screen
        # sudo apt install gdm3 ubuntu-desktop
        # sudo dpkg-reconfigure gdm3
        # echo "gnome-session" > ~/.xsession

    - name: Setup DE
      run: |
        # Install XFCE desktop environment
        sudo apt install -y xfce4 xfce4-goodies
        
        # Install additional packages for aesthetics
        sudo apt install -y xfce4-terminal lightdm lightdm-gtk-greeter
        
        # Install themes and icons
        sudo apt install -y arc-theme papirus-icon-theme
        
        # Install essential applications
        sudo apt install -y gnome-terminal htop
        
        # Set LightDM as the default display manager (if prompted, select lightdm)
        sudo dpkg-reconfigure lightdm
        
        # Configure the default terminal
        sudo update-alternatives --set x-terminal-emulator /usr/bin/xfce4-terminal
        
        # Create a .xsession file to start XFCE session
        echo "startxfce4" > ~/.xsession
        
        # Install and configure conky for system information on the desktop
        sudo apt install -y conky-all
        
        # Create a simple conky configuration
        cat <<EOL > ~/.conkyrc
        conky.config = {
            update_interval = 1,
            total_run_times = 0,
            own_window = true,
            own_window_type = 'desktop',
            own_window_transparent = true,
            own_window_title = 'Conky',
            alignment = 'top_right',
            gap_x = 20,
            gap_y = 20,
            font = 'Ubuntu Mono:size=10',
            double_buffer = true,
        };
        
        conky.text = [[
        ${color grey}OS: ${color white}$alignr${kernel}
        ${color grey}Uptime: ${color white}$alignr${uptime}
        ${color grey}CPU: ${color white}$alignr${cpu}%
        ${color grey}RAM: ${color white}$alignr${mem} / ${memmax}
        ]];
        EOL

    - name: Configure Remote Desktop and Change Root Password
      run: |
        echo "root:$ROOT_PASS" | sudo chpasswd
        sudo systemctl enable xrdp
        sudo systemctl start xrdp
        sudo ufw allow 3389/tcp

    - name: Install zrok
      run: |
        wget https://github.com/openziti/zrok/releases/download/v0.4.42/zrok_0.4.42_linux_amd64.tar.gz -O zrok.tar.gz
        mkdir ./zrok && tar -xf ./zrok.tar.gz -C ./zrok
        ./zrok/zrok version

    - name: Tunnel Setup with zrok
      run: |
        ls
        pwd
        export TERM=dumb  # Set TERM to avoid TTY issues
        screen -L -dm bash -c "./zrok/zrok enable '$ZROK_ENV' > zrok_enable.log 2>&1 && ./zrok/zrok share private --backend-mode tcpTunnel 127.0.0.1:3389 > zrok_share.log 2>&1"

    - name: Check zrok output
      run: |
        sleep 10
        echo "Output from zrok enable:"
        cat zrok_enable.log
        echo "-------------------------------------"
        echo "Output from zrok share:"
        cat zrok_share.log
        sleep 10
        echo "Output from zrok enable:"
        cat zrok_enable.log
        echo "-------------------------------------"
        echo "Output from zrok share:"
        cat zrok_share.log
        sleep 21600
