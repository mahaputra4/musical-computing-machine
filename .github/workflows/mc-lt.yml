name: Server Workflows (macOS)

on: [workflow_dispatch]

jobs:
  build:
    runs-on: macos-latest

    env:
      ROOT_PASS: ${{ secrets.ROOT_PASS }}
      ZROK_ENV: ${{ secrets.ZROK_ENV }}

    steps:
    - name: Set up dependencies
      run: |
        brew update
        brew install ffmpeg curl p7zip screen

    - name: Download zrok
      run: |
        curl -L https://github.com/openziti/zrok/releases/download/v0.4.41/zrok_0.4.41_darwin_amd64.tar.gz -o zrok.tar.gz
        mkdir -p ~/zrok && tar -xf zrok.tar.gz -C ~/zrok
        ~/zrok/zrok version

    - name: VNC Server
      run: |
        brew install --cask xquartz
        open -a XQuartz &
        X :1 &

        brew install x11vnc
        mkdir -p ~/.vnc
        echo "$ROOT_PASS" | x11vnc -storepasswd -f ~/.vnc/passwd
        x11vnc -usepw -display :1 -forever -bg

    # brew install tiger-vnc
    # brew list
    # vncserver :1
    #     echo "Step 0"
    #     sudo /usr/libexec/ApplicationFirewall/socketfilterfw --setglobalstate off
    #     tccutil reset All com.apple.systempreferences
    #     tccutil reset ScreenCapture
    #     sudo profiles -P
    #     sudo launchctl unload /System/Library/LaunchDaemons/com.apple.screensharing.plist
    #     sudo launchctl load /System/Library/LaunchDaemons/com.apple.screensharing.plist
        
    #     echo "Step 1"
    #     sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -allowAccessFor -allUsers -privs -all
        
    #     echo "Step 2"
    #     sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -clientopts -setvnclegacy -vnclegacy yes 
        
    #     echo "Step 3"
    #     sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -configure -clientopts -setvncpw -vncpw $ROOT_PASS

    #     echo "Step 4"
    #     sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -restart -agent -console

    #     echo "Step 5"
    #     sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -activate
        
    - name: Allow Screen Sharing through Firewall
      run: |
        sudo /usr/libexec/ApplicationFirewall/socketfilterfw --add /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/MacOS/ARDAgent
        sudo /usr/libexec/ApplicationFirewall/socketfilterfw --unblockapp /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/MacOS/ARDAgent

    - name: Setup Tunnel with zrok
      run: |
        who
        export TERM=dumb
        screen -L -dm bash -c "~/zrok/zrok enable '$ZROK_ENV' > zrok_enable.log 2>&1 && ~/zrok/zrok share private --backend-mode tcpTunnel 127.0.0.1:5901 > zrok_share.log 2>&1"

    - name: Check zrok output
      run: |
        log show --predicate 'process == "ARDAgent"' --info --last 1h
        sleep 10
        echo "Output from zrok enable:"
        cat zrok_enable.log
        echo "-------------------------------------"
        echo "Output from zrok share:"
        cat zrok_share.log
        sleep 21600
